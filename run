#!/usr/bin/env bash

# -E makes ERR traps inherit into functions/subshells
set -eEuo pipefail  

# List what to remove on failure
NEOVIM_DIR="$HOME/neovim"
DOTFILES_DIR="$HOME/dotfiles"
NVIM_CONFIG_DIR="$HOME/.config/nvim"

cleanup() {
  echo "⚠️  ERROR: cleaning up partial install…"
  rm -rf "$NEOVIM_DIR" \
         "$DOTFILES_DIR" \
         "$NVIM_CONFIG_DIR"
  # Undo the pip install; ignore errors if pip isn’t there
  command -v pip3 >/dev/null && pip3 uninstall -y compiledb || true
  command -v npm  >/dev/null && sudo npm uninstall -g pyright || true
}

# Run cleanup() if any command fails (non‑zero exit)
trap cleanup ERR

main() {
  # Install all dependencies
  echo "=== AIRDROP NVIM ==="
  sudo apt-get update && sudo apt-get upgrade -y

  sudo apt-get install -y \
      git ninja-build cmake gettext \
      build-essential pkg-config libtool \
      curl unzip ripgrep fd-find xclip \
      python3 python3-pip \
      nodejs npm

  # Compilation database generator for C/C++
  pip3 install --user compiledb

  # LSPs for Python and C/C++
  sudo npm install --global pyright
  sudo apt-get install -y clangd

  # Install NeoVim 
  echo "=== BUILDING NEOVIM ==="
  rm -rf "$NEOVIM_DIR"
  git clone https://github.com/neovim/neovim.git "$NEOVIM_DIR"
  cd "$NEOVIM_DIR"
  make CMAKE_BUILD_TYPE=Release
  sudo make install

  # Install custom NeoVim config from dotfiles repository
  echo "=== INSTALLING NVIM CONFIG ==="
  rm -rf "$DOTFILES_DIR"
  git clone https://github.com/starboi-63/dotfiles.git "$DOTFILES_DIR"
  mkdir -p "$NVIM_CONFIG_DIR"
  cp -r "$DOTFILES_DIR/home/.config/nvim/"* "$NVIM_CONFIG_DIR/"

  # If we reach here, everything succeeded: disable the ERR trap
  trap - ERR

  echo "=== AIRDROP NVIM COMPLETE ==="
}

main

